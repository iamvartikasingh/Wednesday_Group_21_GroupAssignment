/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SalesPerson;

import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import model.Business.Business;
import model.Supplier.Supplier;
import model.UserAccountManagement.UserAccount;

import javax.swing.JOptionPane;

import model.ProductManagement.Product;
import model.ProductManagement.ProductSummary;

/**
 * @author LENOVO
 */
public class ManageSuppliersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel cardSequencePanel;
    Business business;
    UserAccount userAccount;

    public ManageSuppliersJPanel(JPanel cardSequencePanel, Business business, UserAccount userAccount) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.business = business;
        this.userAccount = userAccount;
        populateSupplier();
    }

    private void populateSupplier() {
        business.getSupplierDirectory().getSupplierList().forEach(supplier -> {
            cmbSupplier.addItem(supplier);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbSupplier = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductsCaltalog = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblSalesPrice = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblSalesPrice1 = new javax.swing.JLabel();
        txtFrequencyAboveTarget = new javax.swing.JTextField();
        lblSalesPrice2 = new javax.swing.JLabel();
        txtFrequencyBelowTarget = new javax.swing.JTextField();
        lblSalesPrice3 = new javax.swing.JLabel();
        txtSalesRevenue = new javax.swing.JTextField();
        lblSalesPrice4 = new javax.swing.JLabel();
        txtMarginTarget = new javax.swing.JTextField();
        AdjustTargetValue = new javax.swing.JButton();
        lblSalesPrice5 = new javax.swing.JLabel();
        txtSuggestedValue = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        lblSalesPrice7 = new javax.swing.JLabel();
        txtSupplierProfit = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        cmbSupplier.setMaximumRowCount(100);
        cmbSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierActionPerformed(evt);
            }
        });

        tblProductsCaltalog.setAutoCreateRowSorter(true);
        tblProductsCaltalog.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        tblProductsCaltalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Floor Price", "Ceiling Price", "Target Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductsCaltalog.setGridColor(new java.awt.Color(0, 0, 0));
        tblProductsCaltalog.setOpaque(false);
        tblProductsCaltalog.setShowGrid(true);
        tblProductsCaltalog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductsCaltalogMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblProductsCaltalogMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductsCaltalog);

        btnBack.setBackground(new java.awt.Color(51, 51, 51));
        btnBack.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        jLabel1.setText("Supplier :");
        jLabel1.setPreferredSize(new java.awt.Dimension(60, 20));

        lblSalesPrice.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        lblSalesPrice.setText("Product Name");

        lblSalesPrice1.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        lblSalesPrice1.setText("Frequency Above Target");

        lblSalesPrice2.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        lblSalesPrice2.setText("Frequency Below Target");

        lblSalesPrice3.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        lblSalesPrice3.setText("Sales Revenues");

        lblSalesPrice4.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        lblSalesPrice4.setText("Margin Around Target");

        AdjustTargetValue.setText("Adjust Target Value");
        AdjustTargetValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdjustTargetValueActionPerformed(evt);
            }
        });

        lblSalesPrice5.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        lblSalesPrice5.setText("Suggested Target Value");

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Target Price", "No. Sales Above Target", "No. Sales Below Target", "Profit"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jTabbedPane1.addTab("Current Target Analysis", jScrollPane3);

        jTable12.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Total Order Values", "Order Total After", "Order Total Before", "Profit Before", "Profit After"
            }
        ));
        jScrollPane2.setViewportView(jTable12);

        jTabbedPane1.addTab("New Target Analysis", jScrollPane2);

        lblSalesPrice7.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        lblSalesPrice7.setText("Supplier Profit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSupplierProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSalesPrice7))
                                .addGap(240, 240, 240))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtProductName, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                        .addComponent(lblSalesPrice))
                                    .addComponent(txtSuggestedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSalesPrice5))
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFrequencyAboveTarget, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(lblSalesPrice1)
                                    .addComponent(lblSalesPrice3)
                                    .addComponent(txtSalesRevenue, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFrequencyBelowTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSalesPrice2)
                                    .addComponent(txtMarginTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSalesPrice4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AdjustTargetValue, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1)
                    .addComponent(jScrollPane1))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSalesPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblSalesPrice2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFrequencyBelowTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblSalesPrice1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFrequencyAboveTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSalesPrice4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMarginTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSalesPrice3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSalesRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSalesPrice5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSuggestedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lblSalesPrice7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSupplierProfit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AdjustTargetValue))
                .addGap(28, 28, 28)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Current Target Analysis");
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        cardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.previous(cardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblProductsCaltalogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductsCaltalogMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblProductsCaltalogMouseClicked

    private void tblProductsCaltalogMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductsCaltalogMousePressed
        // TODO add your handling code here:
        populateData();
        populatePreviousData();
        populateNewData();

    }//GEN-LAST:event_tblProductsCaltalogMousePressed

    private void AdjustTargetValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdjustTargetValueActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProductsCaltalog.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a product to adjust the target value");
            return;
        }
        Product prod = (Product) tblProductsCaltalog.getValueAt(selectedRow, 0);
        ProductSummary prodSummary = new ProductSummary(prod);
        prod.updateProduct(prod.getFloorPrice(), prod.getCeilingPrice(), Integer.parseInt(txtSuggestedValue.getText()));
        JOptionPane.showMessageDialog(null, "Target Value Adjusted Successfully");
        populateProducts();
    }//GEN-LAST:event_AdjustTargetValueActionPerformed

    private void cmbSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierActionPerformed
        populateProducts();
        txtSupplierProfit.setText(String.valueOf(((Supplier) cmbSupplier.getSelectedItem()).getPricePerformance()));
    }//GEN-LAST:event_cmbSupplierActionPerformed

    private void populateProducts() {
        int selectedSupplierIndex = cmbSupplier.getSelectedIndex();
        if (selectedSupplierIndex < 0) {
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel) tblProductsCaltalog.getModel();
        dtm.setRowCount(0);
        Supplier selectedSupplier = (Supplier) cmbSupplier.getSelectedItem();
        for (int i = 0; i < selectedSupplier.getProductCatalog().getProductList().size(); i++) {
            Object row[] = new Object[4];
            row[0] = selectedSupplier.getProductCatalog().getProductList().get(i);
            row[1] = selectedSupplier.getProductCatalog().getProductList().get(i).getFloorPrice();
            row[2] = selectedSupplier.getProductCatalog().getProductList().get(i).getCeilingPrice();
            row[3] = selectedSupplier.getProductCatalog().getProductList().get(i).getTargetPrice();
            dtm.addRow(row);
        }
        populateData();

    }

    public void populateData() {
        int selectedRow = tblProductsCaltalog.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        Product prod = (Product) tblProductsCaltalog.getValueAt(selectedRow, 0);
        ProductSummary prodSummary = new ProductSummary(prod);
        txtProductName.setText(prodSummary.getProductName());
        txtFrequencyAboveTarget.setText(String.valueOf(prodSummary.getNumberAboveTarget()));
        txtFrequencyBelowTarget.setText(String.valueOf(prodSummary.getNumberBelowTarget()));
        txtSalesRevenue.setText(String.valueOf(prodSummary.getSalesRevenues()));
        txtMarginTarget.setText(String.valueOf(prodSummary.getProductPricePerformance()));

        txtSuggestedValue.setText(String.valueOf(prod.getRecommendedPrice()));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdjustTargetValue;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<Supplier> cmbSupplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable12;
    private javax.swing.JLabel lblSalesPrice;
    private javax.swing.JLabel lblSalesPrice1;
    private javax.swing.JLabel lblSalesPrice2;
    private javax.swing.JLabel lblSalesPrice3;
    private javax.swing.JLabel lblSalesPrice4;
    private javax.swing.JLabel lblSalesPrice5;
    private javax.swing.JLabel lblSalesPrice7;
    private javax.swing.JTable tblProductsCaltalog;
    private javax.swing.JTextField txtFrequencyAboveTarget;
    private javax.swing.JTextField txtFrequencyBelowTarget;
    private javax.swing.JTextField txtMarginTarget;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtSalesRevenue;
    private javax.swing.JTextField txtSuggestedValue;
    private javax.swing.JTextField txtSupplierProfit;
    // End of variables declaration//GEN-END:variables

    private void populatePreviousData() {
        int selectedRow = tblProductsCaltalog.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        Product prod = (Product) tblProductsCaltalog.getValueAt(selectedRow, 0);
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        ProductSummary prodSummary = new ProductSummary(prod);
        Object row[] = new Object[4];
        row[0] = prod.getTargetPrice();
        row[1] = prodSummary.getNumberAboveTarget();
        row[2] = prodSummary.getNumberBelowTarget();
        row[3] = prodSummary.getSalesRevenues();
        dtm.addRow(row);
    }

    private void populateNewData() {
        int selectedRow = tblProductsCaltalog.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        Product prod = (Product) tblProductsCaltalog.getValueAt(selectedRow, 0);
        DefaultTableModel dtm = (DefaultTableModel) jTable12.getModel();
        dtm.setRowCount(0);
        Object row[] = new Object[5];
        row[0] = prod.getQuantity();
        row[1] = prod.getSalesVolume();
        row[2] = prod.getQuantity() * prod.getTargetPrice();
        row[3] = prod.getOrderPricePerformance();
        row[4] = prod.getOrderPricePerformanceIfRecommendedPrice();
        dtm.addRow(row);
    }

}
